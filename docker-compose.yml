services:
  nginx:
    image: nginx:alpine
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web-app
      - user-manager
      - wallpaper-manager
      - wallpaper-vectorizer
      - interaction-collector
      - trending-tracker
      - recommender
      - api-compositor
    restart: always

  web-app:
    build:
      context: ./web-app
      args:
        - VITE_API_BASE_URL=/api
    restart: always

  user-manager:
    build: ./user-manager
    environment:
      - JWT_SECRET=nus-iss-software-engineering-big-data
      - POSTGRES_URL=postgresql://user-manager:3f9876c5d8d29c1c490cdaa119a7d5e3@user-manager-postgres:5432/user-manager
      - KAFKA_BROKERS=kafka-1:9092,kafka-2:9092,kafka-3:9092
    depends_on:
      user-manager-postgres:
        condition: service_started
      init-kafka:
        condition: service_completed_successfully
    restart: always

  user-manager-postgres:
    image: postgres
    environment:
      - POSTGRES_USER=user-manager
      - POSTGRES_PASSWORD=3f9876c5d8d29c1c490cdaa119a7d5e3
      - POSTGRES_DB=user-manager
    volumes:
      - ./user-manager/database:/docker-entrypoint-initdb.d
      - user-manager-postgres-data:/var/lib/postgresql/data
    restart: always

  wallpaper-manager:
    build: ./wallpaper-manager
    environment:
      - API_KEY=only-i-can-scrape-new-wallpapers
      - POSTGRES_URL=postgresql://wallpaper-manager:b9135ff23d8df60de4a4fa7e7d2f8a92@wallpaper-manager-postgres:5432/wallpaper-manager
      - KAFKA_BROKERS=kafka-1:9092,kafka-2:9092,kafka-3:9092
    depends_on:
      wallpaper-manager-postgres:
        condition: service_started
      init-kafka:
        condition: service_completed_successfully
    restart: always

  wallpaper-manager-postgres:
    image: postgres
    environment:
      - POSTGRES_USER=wallpaper-manager
      - POSTGRES_PASSWORD=b9135ff23d8df60de4a4fa7e7d2f8a92
      - POSTGRES_DB=wallpaper-manager
    volumes:
      - ./wallpaper-manager/database:/docker-entrypoint-initdb.d
      - wallpaper-manager-postgres-data:/var/lib/postgresql/data
    restart: always

  wallpaper-vectorizer:
    build: ./wallpaper-processor
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka-1:9092,kafka-2:9092,kafka-3:9092
      - KAFKA_GROUP_ID=vectorizer-group
      - WALLPAPER_SCRAPED_TOPIC=WallpaperScraped
      - WALLPAPER_VECTORIZED_TOPIC=WallpaperVectorized
      - MODEL_PATH=/app/models/bge_model
    volumes:
      - ./wallpaper-processor/models:/app/models
    depends_on:
      init-kafka:
        condition: service_completed_successfully
    restart: always

  interaction-collector:
    build: ./interaction-collector
    environment:
      - POSTGRES_URL=postgresql://interaction-collector:54f48a762ab0867b396cde2d14138d20@interaction-collector-postgres:5432/interaction-collector
      - KAFKA_BROKERS=kafka-1:9092,kafka-2:9092,kafka-3:9092
    depends_on:
      interaction-collector-postgres:
        condition: service_started
      init-kafka:
        condition: service_completed_successfully
    restart: always

  interaction-collector-postgres:
    image: postgres
    environment:
      - POSTGRES_USER=interaction-collector
      - POSTGRES_PASSWORD=54f48a762ab0867b396cde2d14138d20
      - POSTGRES_DB=interaction-collector
    volumes:
      - ./interaction-collector/database:/docker-entrypoint-initdb.d
      - interaction-collector-postgres-data:/var/lib/postgresql/data
    restart: always

  trending-tracker:
    build: ./trending-analyzer
    environment:
      - REDIS_HOST=trending-tracker-redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_TRENDING_KEY=trending-wallpapers
      - SPARK_MASTER=local[*]
      - SPARK_APP_NAME=TrendingWallpaperAnalyzer
      - WINDOW_DURATION_SECONDS=3600
      - SLIDE_DURATION_SECONDS=600
      - KAFKA_BROKERS=kafka-1:9092,kafka-2:9092,kafka-3:9092
      - KAFKA_TOPIC=InteractionCollected
      - KAFKA_GROUP_ID=trending-analyzer-group
    depends_on:
      trending-tracker-redis:
        condition: service_started
      init-kafka:
        condition: service_completed_successfully
    restart: always

  trending-tracker-redis:
    image: redis
    command: redis-server --appendonly yes
    volumes:
      - trending-tracker-redis-data:/data
    restart: always

  recommender:
    build: ./recommend
    environment:
      - KAFKA_BROKERS=kafka-1:9092,kafka-2:9092,kafka-3:9092
      - POSTGRES_USER=recommender
      - POSTGRES_PASSWORD=7d6a7b115bb57151237c633354a74e58
      - POSTGRES_DB=recommender
      - POSTGRES_HOST=recommender-postgres
      - POSTGRES_PORT=5432
    depends_on:
      recommender-postgres:
        condition: service_started
      init-kafka:
        condition: service_completed_successfully
    restart: always

  recommender-postgres:
    image: pgvector/pgvector:pg15
    environment:
      - POSTGRES_USER=recommender
      - POSTGRES_PASSWORD=7d6a7b115bb57151237c633354a74e58
      - POSTGRES_DB=recommender
    volumes:
      - ./recommend/database:/docker-entrypoint-initdb.d
      - recommender-postgres-data:/var/lib/postgresql/data
    restart: always

  api-compositor:
    build: ./api-compositor
    environment:
      - WALLPAPER_MANAGER_BASE_URL=http://wallpaper-manager:3000
      - INTERACTION_CONTROLLER_BASE_URL=http://interaction-collector:3000
      - RECOMMENDER_BASE_URL=http://recommender:7071
      - TRENDING_TRACKER_BASE_URL=http://trending-tracker:8000/api/v1/wallpapers
    depends_on:
      - wallpaper-manager
      - interaction-collector
      - recommender
      - trending-tracker

  init-kafka:
    image: bitnami/kafka
    init: true
    command: sh -c /init-kafka.sh
    volumes:
      - ./init/kafka.sh:/init-kafka.sh
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy

  kafka-1:
    image: bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      - KAFKA_KRAFT_CLUSTER_ID=0
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-1:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=2
    volumes:
      - kafka-1-data:/bitnami/data
    healthcheck:
      test: kafka-topics.sh --bootstrap-server kafka-1:9092 --list
      interval: 30s
      timeout: 10s
      start_period: 30s
      start_interval: 5s
    restart: always

  kafka-2:
    image: bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      - KAFKA_KRAFT_CLUSTER_ID=0
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-2:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=2
    volumes:
      - kafka-2-data:/bitnami/data
    healthcheck:
      test: kafka-topics.sh --bootstrap-server kafka-2:9092 --list
      interval: 30s
      timeout: 10s
      start_period: 30s
      start_interval: 5s
    restart: always

  kafka-3:
    image: bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      - KAFKA_KRAFT_CLUSTER_ID=0
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-3:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=2
    volumes:
      - kafka-3-data:/bitnami/data
    healthcheck:
      test: kafka-topics.sh --bootstrap-server kafka-3:9092 --list
      interval: 30s
      timeout: 10s
      start_period: 30s
      start_interval: 5s
    restart: always

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - 9090:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:9092,kafka-2:9092,kafka-3:9092
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
    restart: always

volumes:
  user-manager-postgres-data:
  wallpaper-manager-postgres-data:
  interaction-collector-postgres-data:
  recommender-postgres-data:
  trending-tracker-redis-data:
  kafka-1-data:
  kafka-2-data:
  kafka-3-data:
